//Generated by gRPC Go plugin
//If you make any local changes, they will be lost
//source: internal_service

package flat

import (
	context "context"
	flatbuffers "github.com/google/flatbuffers/go"
	grpc "google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

// Client API for AuthenticationServiceInternal service
type AuthenticationServiceInternalClient interface {
	GetSecretKey(ctx context.Context, in *flatbuffers.Builder,
		opts ...grpc.CallOption) (*GetSecretKeyResponse, error)
}

type authenticationServiceInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthenticationServiceInternalClient(cc grpc.ClientConnInterface) AuthenticationServiceInternalClient {
	return &authenticationServiceInternalClient{cc}
}

func (c *authenticationServiceInternalClient) GetSecretKey(ctx context.Context, in *flatbuffers.Builder,
	opts ...grpc.CallOption) (*GetSecretKeyResponse, error) {
	out := new(GetSecretKeyResponse)
	err := c.cc.Invoke(ctx, "/flat.AuthenticationServiceInternal/GetSecretKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthenticationServiceInternal service
type AuthenticationServiceInternalServer interface {
	GetSecretKey(context.Context, *GetSecretKeyRequest) (*flatbuffers.Builder, error)
	mustEmbedUnimplementedAuthenticationServiceInternalServer()
}

type UnimplementedAuthenticationServiceInternalServer struct {
}

func (UnimplementedAuthenticationServiceInternalServer) GetSecretKey(context.Context, *GetSecretKeyRequest) (*flatbuffers.Builder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSecretKey not implemented")
}

func (UnimplementedAuthenticationServiceInternalServer) mustEmbedUnimplementedAuthenticationServiceInternalServer() {}

type UnsafeAuthenticationServiceInternalServer interface {
	mustEmbedUnimplementedAuthenticationServiceInternalServer()
}

func RegisterAuthenticationServiceInternalServer(s grpc.ServiceRegistrar, srv AuthenticationServiceInternalServer) {
	s.RegisterService(&_AuthenticationServiceInternal_serviceDesc, srv)
}

func _AuthenticationServiceInternal_GetSecretKey_Handler(srv interface{}, ctx context.Context,
	dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSecretKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceInternalServer).GetSecretKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flat.AuthenticationServiceInternal/GetSecretKey",
	}

	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceInternalServer).GetSecretKey(ctx, req.(*GetSecretKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}
var _AuthenticationServiceInternal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flat.AuthenticationServiceInternal",
	HandlerType: (*AuthenticationServiceInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSecretKey",
			Handler:    _AuthenticationServiceInternal_GetSecretKey_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
	},
}

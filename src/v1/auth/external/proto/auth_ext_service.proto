syntax = "proto3";

package v1.authentication.external.proto;

import "auth_ext_transport.proto";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/ruslanSorokin/authentication-service-api/gen/v1/go/auth/external/proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info :{
		version: "1.0";
	}
	schemes: HTTPS;
};

service AuthenticationExternalService{
  rpc Login(LoginRequest) returns (LoginResponse){
    option (google.api.http) = {
			post: "/api/auth/v1/user/login"
			body: "*"
		};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Authenticate a user via credentials"
			description: "Authenticate a user via credentials and receive a new pair of refresh & access tokens"
			tags: "Users"
		};
  }
  rpc RefreshTokenPair(RefreshTokenPairRequest) returns (RefreshTokenPairResponse){
    option (google.api.http) = {
			post: "/api/auth/v1/user/refresh-token-pair"
			body: "*"
		};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Refresh user's authentication via refresh token"
			description: "Refresh user's authentication via refresh token and receive a new pair of refresh & access tokens"
			tags: "Users"
		};
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse){
    option (google.api.http) = {
			post: "/api/auth/v1/user/logout"
			body: "*"
		};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Logout current session"
			description: "Remove user's active session"
			tags: "Users"
		};
  }
  rpc LogoutAll(LogoutAllRequest) returns (LogoutAllResponse){
    option (google.api.http) = {
			post: "/api/auth/v1/all/logout"
			body: "*"
		};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Logout all sessions"
			description: "Remove all active session"
			tags: "Users"
		};
  }
}

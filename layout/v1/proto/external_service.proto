syntax = "proto3";
package v1.proto;


option go_package = "github.com/ruslanSorokin/auth-service-api/generated/v1/go/proto";


import "external_transport.proto";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info :{
		version: "1.0";
	}
	schemes: HTTPS;
};

service AuthenticationExternalService{
    rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse){
		option (google.api.http) = {
			post: "/v1/authenticate-user"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Authenticate a user"
			description: "Authenticate a user via username & password and receive a new pair of refresh & access tokens"
			tags: "Users"
		};
	}	
    rpc RefreshUserAuthentication(RefreshUserAuthenticationRequest) returns (RefreshUserAuthenticationResponse){
		option (google.api.http) = {
			patch: "/v1/refresh-user"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Refresh user's authentication"
			description: "Refresh user's authentication via refresh token and receive a new pair of refresh & access tokens"
			tags: "Users"
		};
	}
	}
